/*
A VERTICAL event
*/

:global(.fc-v-event) {
    /* allowed to be top-level */
    display: block;
    border: 1px solid #3788d8;
    border: 1px solid var(--fc-event-border-color, #3788d8);
    background-color: #3788d8;
    background-color: var(--fc-event-bg-color, #3788d8);
  
    :global(.fc-event-main) {
      color: #fff;
      color: var(--fc-event-text-color, #fff);
      height: 100%;
    }
  
    :global(.fc-event-main-frame) {
      height: 100%;
      display: flex;
      flex-direction: column;
    }
  
    :global(.fc-event-time) {
      flex-grow: 0;
      flex-shrink: 0;
      max-height: 100%;
      overflow: hidden;
    }
  
    :global(.fc-event-title-container) {
      /* a container for the sticky cushion */
      flex-grow: 1;
      flex-shrink: 1;
      min-height: 0;
  
      /* important for allowing to shrink all the way */
    }
  
    :global(.fc-event-title) {
      /* will have fc-sticky on it */
      top: 0;
      bottom: 0;
      max-height: 100%;
  
      /* clip overflow */
      overflow: hidden;
    }
  
    &:not(.fc-event-start) {
      border-top-width: 0;
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }
  
    &:not(.fc-event-end) {
      border-bottom-width: 0;
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }
  
    &:global(.fc-event-selected:before) {
      /* expand hit area */
      left: -10px;
      right: -10px;
    }
  
    /* resizer (mouse AND touch) */
  
    :global(.fc-event-resizer-start) {
      cursor: n-resize;
    }
  
    :global(.fc-event-resizer-end) {
      cursor: s-resize;
    }
  
    /* resizer for MOUSE */
  
    &:not(.fc-event-selected) {
        :global(.fc-event-resizer) {
        height: 8px;
        height: var(--fc-event-resizer-thickness, 8px);
        left: 0;
        right: 0;
      }
  
      :global(.fc-event-resizer-start) {
        top: -4px;
        top: calc(var(--fc-event-resizer-thickness, 8px) / -2);
      }
  
      :global(.fc-event-resizer-end) {
        bottom: -4px;
        bottom: calc(var(--fc-event-resizer-thickness, 8px) / -2);
      }
    }
  
    /* resizer for TOUCH (when event is "selected") */
  
    &:global(.fc-event-selected) {
        :global(.fc-event-resizer) {
        left: 50%;
        margin-left: -4px;
        margin-left: calc(var(--fc-event-resizer-dot-total-width, 8px) / -2);
      }
  
      :global(.fc-event-resizer-start) {
        top: -4px;
        top: calc(var(--fc-event-resizer-dot-total-width, 8px) / -2);
      }
  
      :global(.fc-event-resizer-end) {
        bottom: -4px;
        bottom: calc(var(--fc-event-resizer-dot-total-width, 8px) / -2);
      }
    }
  }
  
  :global(.fc) {
    :global(.fc-timegrid .fc-daygrid-body) {
      /* the all-day daygrid within the timegrid view */
      z-index: 2;
  
      /* put above the timegrid-body so that more-popover is above everything. TODO: better solution */
    }
  
    :global(.fc-timegrid-divider) {
      padding: 0 0 2px;
  
      /* browsers get confused when you set height. use padding instead */
    }
  
    :global(.fc-timegrid-body) {
      position: relative;
      z-index: 1;
  
      /* scope the z-indexes of slots and cols */
      min-height: 100%;
  
      /* fill height always, even when slat table doesn't grow */
    }
  
    :global(.fc-timegrid-axis-chunk) {
      /* for advanced ScrollGrid */
      position: relative;
  
      > table {
        position: relative;
        z-index: 1;
  
        /* above the now-indicator-container */
      }
    }
  
    :global(.fc-timegrid-slots) {
      position: relative;
      z-index: 1;
    }
  
    :global(.fc-timegrid-slot) {
      /* a <td> */
      height: 1.5em;
      border-bottom: 0;
  
      &:empty:before {
        content: '\00a0';
  
        /* make sure there's at least an empty space to create height for height syncing */
      }
    }
  
    :global(.fc-timegrid-slot-minor) {
      border-top-style: dotted;
    }
  
    :global(.fc-timegrid-slot-label-cushion) {
      display: inline-block;
      white-space: nowrap;
    }
  
    :global(.fc-timegrid-slot-label) {
      vertical-align: middle;
  
      /* vertical align the slots */
    }
  
    /* slots AND axis cells (top-left corner of view including the "all-day" text) */
  
    :global(.fc-timegrid-axis-cushion, .fc-timegrid-slot-label-cushion) {
      padding: 0 4px;
    }
  
    /* axis cells (top-left corner of view including the "all-day" text) */
    /* vertical align is more complicated, uses flexbox */
  
    :global(.fc-timegrid-axis-frame-liquid ){
      height: 100%;
  
      /* will need liquid-hack in FF */
    }
  
    :global(.fc-timegrid-axis-frame) {
      overflow: hidden;
      display: flex;
      align-items: center;
  
      /* vertical align */
      justify-content: flex-end;
  
      /* horizontal align. matches text-align below */
    }
  
    :global(.fc-timegrid-axis-cushion) {
      max-width: 60px;
  
      /* limits the width of the "all-day" text */
      flex-shrink: 0;
  
      /* allows text to expand how it normally would, regardless of constrained width */
    }
  }
  
  :global(.fc-direction-ltr .fc-timegrid-slot-label-frame) {
    text-align: right;
  }
  
  :global(.fc-direction-rtl .fc-timegrid-slot-label-frame) {
    text-align: left;
  }
  
  :global(.fc-liquid-hack .fc-timegrid-axis-frame-liquid) {
    height: auto;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
 
  :global(.fc) {
    :global(.fc-timegrid-col.fc-day-today) {
      background-color: rgba(255, 220, 40, 0.15);
      background-color: var(--fc-today-bg-color, rgba(255, 220, 40, 0.15));
    }
  
    :global(.fc-timegrid-col-frame) {
      min-height: 100%;
  
      /* liquid-hack is below */
      position: relative;
    }
  }
  
  :global(.fc-media-screen) {
    &:global(.fc-liquid-hack .fc-timegrid-col-frame) {
      height: auto;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }
  
    :global(.fc-timegrid-cols) {
      position: absolute;
  
      /* no z-index. children will decide and go above slots */
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
  
      > table {
        height: 100%;
      }
    }
  
    :global(.fc-timegrid-col-bg, .fc-timegrid-col-events, .fc-timegrid-now-indicator-container) {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
    }
  }
  
  :global(.fc) {
    /* bg */
  
    :global(.fc-timegrid-col-bg) {
      z-index: 2;
  
      /* TODO: kill */
  
      :global(.fc-non-business) {
        z-index: 1;
      }
  
      :global(.fc-bg-event) {
        z-index: 2;
      }
  
      :global(.fc-highlight) {
        z-index: 3;
      }
    }
  
    :global(.fc-timegrid-bg-harness) {
      position: absolute;
  
      /* top/bottom will be set by JS */
      left: 0;
      right: 0;
    }
  
    /* fg events */
    /* (the mirror segs are put into a separate container with same classname, */
    /* and they must be after the normal seg container to appear at a higher z-index) */
  
    :global(.fc-timegrid-col-events) {
      z-index: 3;
  
      /* child event segs have z-indexes that are scoped within this div */
    }
  
    /* now indicator */
  
    :global(.fc-timegrid-now-indicator-container) {
      bottom: 0;
      overflow: hidden;
  
      /* don't let overflow of lines/arrows cause unnecessary scrolling */
      /* z-index is set on the individual elements */
    }
  }
  
  :global(.fc-direction-ltr .fc-timegrid-col-events) {
    margin: 0 2.5% 0 2px;
  }
  
  :global(.fc-direction-rtl .fc-timegrid-col-events) {
    margin: 0 2px 0 2.5%;
  }
  
  :global(.fc-timegrid-event-harness) {
    position: absolute;
  
    > :global(.fc-timegrid-event) {
      position: absolute;
  
      /* absolute WITHIN the harness */
      top: 0;
  
      /* for when not yet positioned */
      bottom: 0;
  
      /* " */
      left: 0;
      right: 0;
    }
  }
  
  :global(.fc-timegrid-event-harness-inset .fc-timegrid-event, .fc-timegrid-event.fc-event-mirror, .fc-timegrid-more-link) {
    box-shadow: 0px 0px 0px 1px #fff;
    box-shadow: 0px 0px 0px 1px var(--fc-page-bg-color, #fff);
  }
  
  :global(.fc-timegrid-event, .fc-timegrid-more-link) {
    /* events need to be root */
    font-size: .85em;
    font-size: var(--fc-small-font-size, 0.85em);
    border-radius: 3px;
  }
  
  :global(.fc-timegrid-event) {
    /* events need to be root */
    margin-bottom: 1px;
  
    :global(.fc-event-main) {
      padding: 1px 1px 0;
    }
  
    :global(.fc-event-time) {
      white-space: nowrap;
      font-size: .85em;
      font-size: var(--fc-small-font-size, 0.85em);
      margin-bottom: 1px;
    }
  }
  
  :global(.fc-timegrid-event-short) {
    :global(.fc-event-main-frame) {
      flex-direction: row;
      overflow: hidden;
    }
  
    :global(.fc-event-time:after) {
      content: '\00a0-\00a0';
  
      /* dash surrounded by non-breaking spaces */
    }
  
    :global(.fc-event-title) {
      font-size: .85em;
      font-size: var(--fc-small-font-size, 0.85em);
    }
  }
  
  :global(.fc-timegrid-more-link) {
    /* does NOT inherit from fc-timegrid-event */
    position: absolute;
    z-index: 9999;
  
    /* hack */
    color: inherit;
    color: var(--fc-more-link-text-color, inherit);
    background: #d0d0d0;
    background: var(--fc-more-link-bg-color, #d0d0d0);
    cursor: pointer;
    margin-bottom: 1px;
  
    /* match space below fc-timegrid-event */
  }
  
  :global(.fc-timegrid-more-link-inner) {
    /* has fc-sticky */
    padding: 3px 2px;
    top: 0;
  }
  
  :global(.fc-direction-ltr .fc-timegrid-more-link) {
    right: 0;
  }
  
  :global(.fc-direction-rtl .fc-timegrid-more-link) {
    left: 0;
  }
  
  :global(.fc) {
    /* line */
  
    :global(.fc-timegrid-now-indicator-line) {
      position: absolute;
      z-index: 4;
      left: 0;
      right: 0;
      border-style: solid;
      border-color: red;
      border-color: var(--fc-now-indicator-color, red);
      border-width: 1px 0 0;
    }
  
    /* arrow */
  
    :global(.fc-timegrid-now-indicator-arrow) {
      position: absolute;
      z-index: 4;
      margin-top: -5px;
  
      /* vertically center on top coordinate */
      border-style: solid;
      border-color: red;
      border-color: var(--fc-now-indicator-color, red);
    }
  }
  
  :global(.fc-direction-ltr .fc-timegrid-now-indicator-arrow) {
    left: 0;
  
    /* triangle pointing right. TODO: mixin */
    border-width: 5px 0 5px 6px;
    border-top-color: transparent;
    border-bottom-color: transparent;
  }
  
  :global(.fc-direction-rtl .fc-timegrid-now-indicator-arrow) {
    right: 0;
  
    /* triangle pointing left. TODO: mixin */
    border-width: 5px 6px 5px 0;
    border-top-color: transparent;
    border-bottom-color: transparent;
  }